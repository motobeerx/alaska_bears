Alaska Checklist:

1) test_user_can_add_bears: Проверить, что пользователь может добавлять медведе (в данной проверки геннерируется задаваемое число медведей,
со случайными параметрами. Тип GUMMY исключен из-за дефекта. Также, из-за дефекта, случайный текст генерируется только в
заглавном регистре.

2) test_user_can_change_bear_name: Проверить, что имя медведя можно изменить
3) test_user_can_change_bear_type: Проверить, что тип медведя можно изменить
4) test_user_can_change_bear_age: Проверить, что возраст медведя можно изменить

5) test_user_can_delete_bear: Проверить, что можно удалить определенного медведя
6) test_user_can_delete_all_bears: Проверить, что можно удалить всех медведей

7) test_user_can_add_bear_with_empty_string_name: Проверить, что пользователь может добавить медведя с имя=пустая строка
8) test_user_can_add_bear_with_whitespaces_name: Проверить, что пользователь может добавить медведяс с именем=пробелы
9) test_user_can_add_bear_with_null_name: Проверить, что пользователь может добавть имя="null"
10)test_user_can_not_add_bear_with_none_value_name: Проверить, что пользователь НЕ может добавть имя=None

11)test_user_can_not_add_bear_with_invalid_type: Проверить, что пользователь не может добавить другой тип медведя

12)test_user_can_add_bear_with_zero_age: Проверить, что пользователь может добавить медведя с 0 возрастом
13)test_user_can_not_add_bear_with_negative_age: Проверить, что пользователь НЕ может добавить медведя с отриц возрастом
14)test_user_can_not_add_bear_with_positive_inf_age: Проверить, что пользователь НЕ может добавить медведя с возратсом +бесконечность
15)test_user_can_not_add_bear_with_negative_inf_age: Проверить, что пользователь НЕ может добавить медведя с возратсом -бесконечность
16)test_user_can_not_add_bear_with_nan_age: Проверить, что пользователь НЕ может добавить медведя с возрастом NaN/None
17)test_user_can_not_add_bear_with_string_type_age: Проверить, что пользователь НЕ может добавить медведя с возрастом типа строки

19)test_user_can_add_two_equal_bears: Проверить, что пользователь может создать двух одинаковых медведей(но с разными id)
20): Проверить, что пользователь не может найти несуществующего медведя
21): Проверить, что пользователь не может обновить несуществующего медведя(Здесь ожидается, что вернется не 500 ошибка, а None)
22): Проверить, что пользователь не может удалить несуществующего медведя(Здесь ожидается, что вернется None после удаления несущ. медведя)


== Performance ==
23)test_load_in_time_until_max: Проверить, что сервер\бд выдержить постоянно повышаюшуюся нагрузку
24)test_load_max_and_update: Проверить, что сервер\бд может обновлять медведей в предельной нагрузке
25)test_load_max_and_delete: Проверить, что сервер\бд может удалять медведей в предельной нагрузке
26)test_load_max_multiple_times: Проверить, что сервер\бд может выдержать резкие перепады в нагрузке


